# Mon Oct 28 22:54:23 ACDT 2024
# vim:ft=fish      
# This file is automatically generated. Do not edit this file, unless you know what you are doing                 

# See https://fishshell.com/docs/3.4/language.html#featureflags for details.
set -Ua fish_features qmark-noglob

function __is_WSL
    return (uname -a | grep -q WSL)
end

function __is_mac
    return (test $(uname) = 'Darwin')
end

# it's WSL
__is_WSL && set OPEN explorer.exe
__is_mac && set OPEN open


abbr -a _PDF_FishHDL_FILE__extension --position command --regex ".+\.(pdf|PDF)\"?\'?" --function __PDF_FishHDL_FILE__extension
 
function __PDF_FishHDL_FILE__extension
    set -l first_char $( echo $argv | string trim | string sub -s 1 -e 1 )
    set -l last_char $( echo $argv | string trim | string sub -s -1 )
    if [ $first_char = "\"" -a $last_char = "\"" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else if [ $first_char = "'" -a $last_char = "'" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else
        set myargv $argv
    end
    
    __is_WSL && set -l F $( wslpath -a -u $myargv ) || \
    set -l F "$myargv"
    
    set -l MDIR $(path dirname $F  )
    set -l INPUT $(path basename  $F  )
    
    echo -n "# Changing dir from: $(pwd) --> "
    builtin cd $MDIR
    echo "$(pwd)"
    echo pdfly.sh $INPUT 
end


abbr -a _IMAGE_FishHDL_FILE__extension --position command --regex ".+\.(png|PNG|heic|HEIC|tiff|TIFF)\"?\'?" --function __IMAGE_FishHDL_FILE__extension
 
function __IMAGE_FishHDL_FILE__extension
    set -l first_char $( echo $argv | string trim | string sub -s 1 -e 1 )
    set -l last_char $( echo $argv | string trim | string sub -s -1 )
    if [ $first_char = "\"" -a $last_char = "\"" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else if [ $first_char = "'" -a $last_char = "'" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else
        set myargv $argv
    end
    
    __is_WSL && set -l F $( wslpath -a -u $myargv ) || \
    set -l F "$myargv"
    
    set -l MDIR $(path dirname $F  )
    set -l INPUT $(path basename  $F  )
    
    echo -n "# Changing dir from: $(pwd) --> "
    builtin cd $MDIR
    echo "$(pwd)"
    echo img_to_jpg $INPUT 
end


abbr -a _LaTeX_FishHDL_FILE__extension --position command --regex ".+\.(tex|TEX)\"?\'?" --function __LaTeX_FishHDL_FILE__extension
 
function __LaTeX_FishHDL_FILE__extension
    set -l first_char $( echo $argv | string trim | string sub -s 1 -e 1 )
    set -l last_char $( echo $argv | string trim | string sub -s -1 )
    if [ $first_char = "\"" -a $last_char = "\"" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else if [ $first_char = "'" -a $last_char = "'" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else
        set myargv $argv
    end
    
    __is_WSL && set -l F $( wslpath -a -u $myargv ) || \
    set -l F "$myargv"
    
    set -l MDIR $(path dirname $F  )
    set -l INPUT $(path basename  $F  )
    
    echo -n "# Changing dir from: $(pwd) --> "
    builtin cd $MDIR
    echo "$(pwd)"
    echo pdflatex-quiet $INPUT 
end


abbr -a _DOCX_FishHDL_FILE__extension --position command --regex ".+\.(docx|DOCX)\"?\'?" --function __DOCX_FishHDL_FILE__extension
 
function __DOCX_FishHDL_FILE__extension
    set -l first_char $( echo $argv | string trim | string sub -s 1 -e 1 )
    set -l last_char $( echo $argv | string trim | string sub -s -1 )
    if [ $first_char = "\"" -a $last_char = "\"" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else if [ $first_char = "'" -a $last_char = "'" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else
        set myargv $argv
    end
    
    __is_WSL && set -l F $( wslpath -a -u $myargv ) || \
    set -l F "$myargv"
    
    set -l MDIR $(path dirname $F  )
    set -l INPUT $(path basename  $F  )
    
    echo -n "# Changing dir from: $(pwd) --> "
    builtin cd $MDIR
    echo "$(pwd)"
    echo docx2pdf $INPUT 
end


abbr -a _Compression_FishHDL_FILE__extension --position command --regex ".+\.(7z|Z|bz2|cab|cpio|crx|gz|jar|lzma|lha|rar|tar|taz|tb2|tbz|tbz2|tgz|txz|xz|zip|zst|zst)\"?\'?" --function __Compression_FishHDL_FILE__extension
 
function __Compression_FishHDL_FILE__extension
    set -l first_char $( echo $argv | string trim | string sub -s 1 -e 1 )
    set -l last_char $( echo $argv | string trim | string sub -s -1 )
    if [ $first_char = "\"" -a $last_char = "\"" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else if [ $first_char = "'" -a $last_char = "'" ]
        set myargv (echo $argv | string sub -s 2 -e -1 )
    else
        set myargv $argv
    end
    
    __is_WSL && set -l F $( wslpath -a -u $myargv ) || \
    set -l F "$myargv"
    
    set -l MDIR $(path dirname $F  )
    set -l INPUT $(path basename  $F  )
    
    echo -n "# Changing dir from: $(pwd) --> "
    builtin cd $MDIR
    echo "$(pwd)"
    echo dtrx -v --one inside $INPUT 
end


abbr -a _Youtube_FishHDL_URL__url --position command --regex "\"?\'?https://www.youtube.com.*" --function __Youtube_FishHDL_URL__url
 
function __Youtube_FishHDL_URL__url
    set -l INPUT $argv
    echo avdl.sh $INPUT 
end


abbr -a _xiaohongshu_FishHDL_URL__url --position command --regex "\"?\'?https://www.xiaohongshu.com.*" --function __xiaohongshu_FishHDL_URL__url
 
function __xiaohongshu_FishHDL_URL__url
    set -l INPUT $argv
    echo avdl.sh $INPUT 
end


abbr -a _arxiv_FishHDL_URL__url --position command --regex "\"?\'?https://arxiv.org.*" --function __arxiv_FishHDL_URL__url
 
function __arxiv_FishHDL_URL__url
    set -l INPUT $argv
    echo arxiv  $INPUT 
end


abbr -a _Convertimages_FishHDL_Generic__rule --position command --regex '.*convert.*image.*' --function __Convertimages_FishHDL_Generic__rule
 
function  __Convertimages_FishHDL_Generic__rule
    set -l INPUT $argv
    echo tldr magick && echo echo you can use the command magick
end

